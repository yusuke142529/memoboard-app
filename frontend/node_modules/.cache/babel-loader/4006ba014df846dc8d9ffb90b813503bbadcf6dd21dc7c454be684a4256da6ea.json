{"ast":null,"code":"// src/services/api.ts\n\nimport axios from 'axios'; // AxiosRequestConfig のインポートを削除\n\nconst instance = axios.create({\n  baseURL: 'http://localhost:3001' // バックエンドのURLを適宜変更\n});\n\n// リクエストインターセプターの設定\ninstance.interceptors.request.use(config => {\n  // 型注釈を削除\n  const token = localStorage.getItem('token');\n  if (token && config.headers) {\n    // トークンに 'Bearer ' が含まれていない場合は追加\n    config.headers.Authorization = token.startsWith('Bearer ') ? token : `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\nexport default instance;","map":{"version":3,"names":["axios","instance","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","startsWith","error","Promise","reject"],"sources":["/Users/yusukekageyama/memoboard-app/frontend/src/services/api.ts"],"sourcesContent":["// src/services/api.ts\n\nimport axios from 'axios'; // AxiosRequestConfig のインポートを削除\n\nconst instance = axios.create({\n  baseURL: 'http://localhost:3001', // バックエンドのURLを適宜変更\n});\n\n// リクエストインターセプターの設定\ninstance.interceptors.request.use(\n  (config) => { // 型注釈を削除\n    const token = localStorage.getItem('token');\n    if (token && config.headers) {\n      // トークンに 'Bearer ' が含まれていない場合は追加\n      config.headers.Authorization = token.startsWith('Bearer ') ? token : `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nexport default instance;"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO,CAAC,CAAC;;AAE3B,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC5BC,OAAO,EAAE,uBAAuB,CAAE;AACpC,CAAC,CAAC;;AAEF;AACAF,QAAQ,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAK;EAAE;EACZ,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,IAAID,MAAM,CAACI,OAAO,EAAE;IAC3B;IACAJ,MAAM,CAACI,OAAO,CAACC,aAAa,GAAGJ,KAAK,CAACK,UAAU,CAAC,SAAS,CAAC,GAAGL,KAAK,GAAG,UAAUA,KAAK,EAAE;EACxF;EACA,OAAOD,MAAM;AACf,CAAC,EACAO,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;AAED,eAAeb,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}