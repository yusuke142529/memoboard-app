{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from '../services/api';\nconst Logout = () => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const logout = async () => {\n      try {\n        // トークンを取得してヘッダーに設定\n        const token = localStorage.getItem('token');\n        if (token) {\n          await axios.delete('/api/v1/users/sign_out', {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n        }\n\n        // トークンを削除してリダイレクト\n        localStorage.removeItem('token');\n        navigate('/login');\n      } catch (error) {\n        console.error('ログアウトエラー:', error);\n        alert('ログアウトに失敗しました。');\n      }\n    };\n    logout();\n  }, [navigate]);\n  return null;\n};\n_s(Logout, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = Logout;\nexport default Logout;\nvar _c;\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"names":["useEffect","useNavigate","axios","Logout","_s","navigate","logout","token","localStorage","getItem","delete","headers","Authorization","removeItem","error","console","alert","_c","$RefreshReg$"],"sources":["/Users/yusukekageyama/memoboard-app/frontend/src/components/Logout.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from '../services/api';\n\nconst Logout: React.FC = () => {\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const logout = async () => {\n            try {\n                // トークンを取得してヘッダーに設定\n                const token = localStorage.getItem('token');\n                if (token) {\n                    await axios.delete('/api/v1/users/sign_out', {\n                        headers: {\n                            Authorization: `Bearer ${token}`,\n                        },\n                    });\n                }\n\n                // トークンを削除してリダイレクト\n                localStorage.removeItem('token');\n                navigate('/login');\n            } catch (error: any) {\n                console.error('ログアウトエラー:', error);\n                alert('ログアウトに失敗しました。');\n            }\n        };\n\n        logout();\n    }, [navigate]);\n\n    return null;\n};\n\nexport default Logout;"],"mappings":";AAAA,SAAgBA,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,iBAAiB;AAEnC,MAAMC,MAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGJ,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACZ,MAAMM,MAAM,GAAG,MAAAA,CAAA,KAAY;MACvB,IAAI;QACA;QACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,IAAIF,KAAK,EAAE;UACP,MAAML,KAAK,CAACQ,MAAM,CAAC,wBAAwB,EAAE;YACzCC,OAAO,EAAE;cACLC,aAAa,EAAE,UAAUL,KAAK;YAClC;UACJ,CAAC,CAAC;QACN;;QAEA;QACAC,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;QAChCR,QAAQ,CAAC,QAAQ,CAAC;MACtB,CAAC,CAAC,OAAOS,KAAU,EAAE;QACjBC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjCE,KAAK,CAAC,eAAe,CAAC;MAC1B;IACJ,CAAC;IAEDV,MAAM,CAAC,CAAC;EACZ,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,OAAO,IAAI;AACf,CAAC;AAACD,EAAA,CA7BID,MAAgB;EAAA,QACDF,WAAW;AAAA;AAAAgB,EAAA,GAD1Bd,MAAgB;AA+BtB,eAAeA,MAAM;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}